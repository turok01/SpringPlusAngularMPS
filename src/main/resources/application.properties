# настройки доступа к базе через MySQL
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=update
#1. update (Update the schema if necessary)
#2. create (create the schema and destroy previous data)
#3. create-drop (create and then destroy the schema at the end of the session)
#4. none (disable ddl handling)
#5. validate (validate the schema , make no changes to the database)
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/mpsdb

#mysql config
#spring.datasource.url=jdbc:mysql://localhost:3306/mpsdb?useLegacyDatetimeCode=false&amp&serverTimezone=UTC
#spring.datasource.username=springuser
#spring.datasource.password=springappl01

#spring.datasource.initialization-mode=always

#heroku postgres
spring:
    datasource:
        url: ${JDBC_DATABASE_URL}
        username: ${JDBC_DATABASE_USERNAME}
        password: ${JDBC_DATABASE_PASSWORD}

##postgresql
#spring.datasource.url=jdbc:postgresql://localhost:5432/SpringMPS
#spring.jpa.properties.hibernate.default_schema=public
#spring.datasource.username=root
#spring.datasource.password=root

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect

#инициализировать БД программно
#spring.datasource.initialization-mode=ALWAYS
#spring.datasource.schema=classpath*:database/initDB.sql
#spring.datasource.data=classpath*:database/populateDB.sql

# Поддерживаем соединение живым, если долго не было запросов мождет отвалиться
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

#Logging JPA Queries, 1st line Log Query. 2nd line Log parameters of prepared statements
logging.level.org.hibernate.SQL=DEBUG  
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE  

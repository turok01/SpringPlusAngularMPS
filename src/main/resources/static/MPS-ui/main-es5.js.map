{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add/add.component.ts","webpack:///src/app/add/add.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/by-id/by-id.component.ts","webpack:///src/app/by-id/by-id.component.html","webpack:///src/app/recent/recent.component.ts","webpack:///src/app/recent/recent.component.html","webpack:///src/app/service/http.service.ts","webpack:///src/app/subst-list/subst-list.component.ts","webpack:///src/app/subst-list/subst-list.component.html","webpack:///src/app/update/update.component.ts","webpack:///src/app/update/update.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddComponent","console","log","selector","templateUrl","styleUrls","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","ByIdComponent","httpService","activatedRoute","snapshot","params","getbyId","subscribe","data","subst","RecentComponent","getRecent","substs","HttpService","http","get","providedIn","SubstListComponent","getAll","UpdateComponent","httpClient","model","nameSubst","ip","zone","body","put","headers","set","res","error","myHeaders","patch","onSubmit","saveUpdate","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(\"add component log\")\n  }\n\n}\n","<p>add works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {SubstListComponent} from \"./subst-list/subst-list.component\";\nimport {AppComponent} from \"./app.component\";\nimport {RecentComponent} from \"./recent/recent.component\";\nimport {ByIdComponent} from \"./by-id/by-id.component\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {AddComponent} from \"./add/add.component\";\n\n\nconst routes: Routes = [\n  {path:'rest/select', component : SubstListComponent},\n  {path:'rest/recent', component : RecentComponent},\n  {path:'rest/:id', component : ByIdComponent},\n  {path:'rest/update/:id', component : UpdateComponent},\n  {path:'rest/add', component : AddComponent}\n  //{path: '**', component : AppComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MPS-ui';\n\n}\n","<!-- Style to create button -->\n<style>\n  .GFG {\n    text-align: center;\n    display: inline-block;\n    font-size: 14px;\n    margin: 5px 2px;\n    cursor: pointer;\n  }\n</style>\n<p>MPS-ui app is running!</p>\n\n<button class=\"GFG\" [routerLink]=\"'/rest/select'\"> Показать все</button>\n<button class =\"GFG\" [routerLink]=\"'/rest/recent'\"> Показать последние</button>\n<button class =\"GFG\" [routerLink]=\"'/rest/' + boxSubst.value\"> Показать {{boxSubst.value}}</button>\n<button class=\"GFG\" [routerLink]=\"'/rest/add'\"> Добавить</button>\n<input #boxSubst (keyup)=\"1\">\n\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { SubstListComponent } from './subst-list/subst-list.component';\nimport { RecentComponent } from './recent/recent.component';\nimport { ByIdComponent } from './by-id/by-id.component';\nimport {UpdateComponent} from \"./update/update.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport { AddComponent } from './add/add.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SubstListComponent,\n    RecentComponent,\n    ByIdComponent,\n    UpdateComponent,\n    AddComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Subst} from \"../subst-list/subst\";\nimport {HttpService} from \"../service/http.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-by-id',\n  templateUrl: './by-id.component.html',\n  styleUrls: ['./by-id.component.css']\n})\nexport class ByIdComponent implements OnInit {\n\n  subst : Subst;\n  id : number;\n\n  constructor(private httpService:HttpService, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.id = this.activatedRoute.snapshot.params['id']\n    this.httpService.getbyId(this.id).subscribe(\n      data=>this.subst = data)\n    console.log(\"ngOnInit ByIdComponent output in console\")\n  }\n\n}\n","<p>by-id works!</p>\n<h2>Список подстанций</h2>\n\n<table border=\"1\">\n  <thead></thead>\n  <tr>\n    <th>Название</th>\n    <th>IP-адрес</th>\n    <th>Принадлежность</th>\n    <th>Сохранил</th>\n  </tr>\n  <tbody>\n  <tr >\n    <td>{{subst.nameSubst}}</td>\n    <td>{{subst.ip}}</td>\n    <td>{{subst.zone}}</td>\n    <td>{{subst.user?.username}}</td>\n  </tr>\n  </tbody>\n</table>\n<button class =\"GFG\" [routerLink]=\"'/rest/update/' + subst.id\"> Редактировать {{subst.id}}</button>\n<!--<button class =\"GFG\" [routerLink]=\"'/rest/update/' + boxSubst.value\"> Сохранить изменения {{boxSubst.value}}</button>\n-->\n\n","import { Component, OnInit } from '@angular/core';\nimport {Subst} from \"../subst-list/subst\";\nimport {HttpService} from \"../service/http.service\";\n\n@Component({\n  selector: 'app-recent',\n  templateUrl: './recent.component.html',\n  styleUrls: ['./recent.component.css']\n})\nexport class RecentComponent implements OnInit {\n\n  substs:Subst[];\n\n  constructor(private httpService:HttpService) { }\n\n  ngOnInit(): void {\n    this.httpService.getRecent().subscribe(\n      data=>this.substs = data)\n  }\n\n}\n","<p>recent works!</p>\n<h2>Список последних добавленных подстанций</h2>\n\n<table border=\"1\">\n  <thead></thead>\n  <tr>\n    <th>Название</th>\n    <th>IP-адрес</th>\n    <th>Принадлежность</th>\n    <th>Сохранил</th>\n  </tr>\n  <tbody>\n  <tr *ngFor=\"let subst of substs\">\n    <td>{{subst.nameSubst}}</td>\n    <td>{{subst.ip}}</td>\n    <td>{{subst.zone}}</td>\n    <td>{{subst.user?.username}}</td>\n\n  </tr>\n  </tbody>\n</table>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({providedIn: 'root'})//providedIn will auto-register class when the app bootstraps.\nexport class HttpService {\n\n  constructor(private http:HttpClient) { }\n  getAll():Observable<any>{\n    //return this.http.get('http://localhost:8080/rest-select');\n    return this.http.get('https://localhost:8443/rest/select');\n    //return this.http.get('https://localhost:8443/select');\n  }\n\n  getRecent():Observable<any>{\n    return  this.http.get('https://localhost:8443/rest/recent');\n  }\n\n  getbyId(id:number):Observable<any>{\n    return  this.http.get('https://localhost:8443/rest/' + id);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {HttpService} from \"../service/http.service\";\nimport {Subst} from \"./subst\";\n\n@Component({\n  selector: 'app-subst-list',\n  templateUrl: './subst-list.component.html',\n  styleUrls: ['./subst-list.component.css']\n})\nexport class SubstListComponent implements OnInit {\n  //substs:Array<any>;\n  substs:Subst[];\n\n  constructor(private httpService:HttpService) { }\n\n  ngOnInit(): void {\n    this.httpService.getAll().subscribe(\n      data=>this.substs = data)\n  }\n\n}\n","\n<p>subst-list works!</p>\n<h2>Список подстанций</h2>\n\n<table border=\"1\">\n  <thead></thead>\n  <tr>\n    <th>Название</th>\n    <th>IP-адрес</th>\n    <th>Принадлежность</th>\n    <th>Сохранил</th>\n  </tr>\n  <tbody>\n  <tr *ngFor=\"let subst of substs\">\n    <td>{{subst.nameSubst}}</td>\n    <td>{{subst.ip}}</td>\n    <td>{{subst.zone}}</td>\n    <td>{{subst.user?.username}}</td>\n\n  </tr>\n  </tbody>\n</table>\n","import {Component, Injectable, OnInit} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Subst} from \"../subst-list/subst\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {HttpService} from \"../service/http.service\";\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\n@Injectable()\nexport class UpdateComponent implements OnInit {\n\n  model={\n    nameSubst: 'ТП-000',\n    ip: '',\n    zone: ''\n  }\n  subst : Subst;\n  id : number;\n\n  constructor(private httpClient:HttpClient, private httpService: HttpService,  private activatedRoute: ActivatedRoute){}\n\n  ngOnInit(): void {\n    this.id = this.activatedRoute.snapshot.params['id']\n    this.httpService.getbyId(this.id).subscribe(\n      data=>this.subst = data)\n    console.log('update OnInit working')\n  }\n  onSubmit(){\n    const body = {nameSubst: this.subst.nameSubst, zone: this.subst.zone, ip: this.subst.ip};\n\n    //this.httpClient.patch(\n    this.httpClient.put(\n      'https://localhost:8443/rest/' + this.id,body,{\n      //'https://localhost:8443/rest/' + this.id,this.model,{\n        headers: new HttpHeaders().set('Content-type','application/json'),\n      }).subscribe(res => {\n                    console.log('received ok response from patch request');\n                  },\n                  error => {\n                    console.error('There was an error during the request');\n                    console.log(error);\n                  }\n                  );\n    console.log('request sent. Waiting for response...');\n\n\n\n    /*this.HttpService.post(\n      'http://localhost:8080/design',this.model,{\n        headers: new HttpHeaders().set('Content-type','application/json'),\n      }).subscribe(data=>this.subst=data)\n      */\n  }\n  saveUpdate(){\n    const myHeaders = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n    const body = {nameSubst: this.subst.nameSubst, zone: this.subst.zone};\n    this.subst.nameSubst=\"ТП-6u\";\n    this.httpClient.patch(\n      'https://localhost:8443/rest/' + this.id, body ,{headers: myHeaders}).subscribe(res => {\n        console.log('received ok response from patch request');\n      },\n      error => {\n        console.error('There was an error during the request');\n        console.log(error);\n      }\n    );\n    console.log('Save Update working')\n  }\n\n}\n","<p>update works! </p>\n<h2>Список подстанций</h2>\n\n<table border=\"1\">\n  <thead></thead>\n  <tr>\n    <th>Название</th>\n    <th>IP-адрес</th>\n    <th>Принадлежность</th>\n    <th>Сохранил</th>\n  </tr>\n  <tbody>\n  <tr >\n    <td>{{subst.nameSubst}}</td>\n    <td>{{subst.ip}}</td>\n    <td>{{subst.zone}}</td>\n    <td>{{subst.user?.username}}</td>\n\n  </tr>\n  </tbody>\n</table>\n<form (ngSubmit)=\"onSubmit()\">\n  <button> Редактировать подстанцию {{subst.id}}</button>\n  <!--<button class =\"GFG\" [routerLink]=\"'/rest/update/' + subst.id\"> Сохранить {{subst.id}}</button>\n  -->\n</form>\n<div class=\"class1\">\n  <div class=\"form-group\">\n    <label>Наименование </label>\n    <input class=\"form-control\" name=\"name\"\n           [(ngModel)]=\"subst.nameSubst\" />\n  </div>\n  <div class=\"form-group\">\n    <label>IP-адрес </label>\n    <input class=\"form-control\" name=\"IP\"\n           [(ngModel)]=\"subst.ip\" />\n  </div>\n  <div class=\"form-group\">\n    <label>Принадлеженость </label>\n    <input class=\"form-control\" name=\"zone\"\n           [(ngModel)]=\"subst.zone\" />\n  </div>\n  <div class=\"form-group\">\n    <button (click)=\"saveUpdate()\">\n      Изменить имя\n    </button>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}